<?xml version="1.0"?>
<robot
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:xacro="http://ros.org/wiki/xacro"
  name="volksbot_base">

  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:property name="wheel_width" value="0.06" />
  <!-- This is the wheel radius for the robot height, the one for the odometry is in volksbot_node.cpp  -->
  <xacro:property name="wheel_radius" value="0.125" /> <!-- 0.065-->
  <xacro:property name="axis_length" value="0.47" /> <!-- 0.47-->
  <xacro:property name="wheel_x_offset" value="0.24" />
  <xacro:property name="wheel_z_offset" value="-0.0275" />
  <xacro:property name="turning_adaptation" value="0.95" />
  <xacro:property name="base_mass" value="1" />
  <xacro:property name="wheel_mass" value="0.1" />
  <xacro:property name="back_wheel_mass" value="0.1" />

  <xacro:property name="base_link_length" value="0.57"/>
  <xacro:property name="base_link_width" value="0.38"/>
  <xacro:property name="base_link_height" value="0.155"/>
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
       navigation stack depends on this frame -->

  <link name="base_footprint" />
  <joint name="base_link_footprint_joint" type="fixed"> 
	<origin xyz="0 0 ${base_link_height/2 - wheel_z_offset + wheel_radius}" rpy="0 0 0"/>
	<parent link="base_footprint" />
	<child link="base_link" />
  </joint>

  <link name="base_link_dummy">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_link_length} ${base_link_width} ${base_link_height}" />
        <!--mesh filename="package://volksbot_driver/meshes/base.stl"/-->
      </geometry>
      <material name="grey" >
        <color rgba="0.5 0.5 0.5 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_link_length} ${base_link_width} ${base_link_height}" />
        <!--mesh filename="package://volksbot_driver/meshes/base.stl"/-->
      </geometry>
    </collision>
    <inertial>
      <mass value="${base_mass}" />
      <origin pose="0 0 0 0 0 0" />
      <inertia iyy="${0.0833333 * base_mass * (base_link_length**2 + base_link_height**2)}" ixy="0.0" ixz="0.0"
        ixx="${0.0833333 * base_mass * (base_link_width**2 + base_link_height**2)}" iyz="0.0"
        izz="${0.0833333 * base_mass * (base_link_length**2 + base_link_width**2)}" />
    </inertial>
  </link>

  <joint name="base_link_dummy_joint" type="fixed">
    <origin xyz="${-wheel_x_offset} 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="base_link_dummy" />
  </joint>
  
  <link name="base_link"/>

  <xacro:macro name="volksbot_wheel" params="name xyz rotate_visual friction type mass ix iy iz">
    <!-- rotate_visual: 0 for right side, 1 for left side -->
    <link name="${name}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 ${rotate_visual * M_PI}" />
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
          <!--mesh filename="package://volksbot_driver/meshes/wheel.stl" /-->
        </geometry>
        <material name="blackish">
          <color rgba="0.2 0.2 0.2 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
        <geometry>
         <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>>
          <!--mesh filename="package://volksbot_driver/meshes/wheel.stl" /-->
        </geometry>
      </collision>
      <inertial>
        <mass value="${mass}" />
        <origin xyz="${ix} ${iy} ${iz}" />
        <inertia ixx="${0.0833333 * mass * (3 * wheel_radius**2 + wheel_width**2)}" ixy="0.0" ixz="0.0"
          iyy="${0.5 * mass * wheel_radius**2}" iyz="0.0"
          izz="${0.083333 * mass *(3 * wheel_radius**2 + wheel_width**2)}" />
      </inertial>
    </link>


    <!-- friction parameters --> <!-- 1000000.0" -->
    <gazebo reference="${name}_wheel_link">
      <mu1 value="${friction}"/>
      <mu2 value="${friction}"/>
      <kp  value="1000000.0" />
      <kd  value="1.0" />
      <maxVel  value="1.0" />
      <minDepth  value="0.0" />
      <material value="Gazebo/FlatBlack" />
    </gazebo>

    <joint name="${name}_wheel_joint" type="${type}">
      <origin xyz="${xyz}" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${name}_wheel_link"/>
      <axis xyz="0 1 0"/>
      
      <calibration rising="0.0"/>
      <dynamics damping="1.0" friction="0.0"/>
      <limit effort="100" velocity="15.0" />
      <safety_controller k_velocity="15" />
    </joint>
  </xacro:macro>

  <xacro:volksbot_wheel name="left_front" xyz="0 ${axis_length/2} ${-base_link_height/2 + wheel_z_offset}" rotate_visual="1" friction="100.0" type="continuous" mass="${wheel_mass}" ix="0" iy="0" iz="0" />
  <xacro:volksbot_wheel name="left_rear" xyz="${-2 * wheel_x_offset} ${axis_length/2} ${-base_link_height/2 + wheel_z_offset}" rotate_visual="1" friction="0.0" type="fixed" mass="${back_wheel_mass}" ix="${0.5*base_link_length}" iy="${-axis_length/2}" iz="${base_link_height/2 - wheel_z_offset}"/>
  
  <xacro:volksbot_wheel name="right_front" xyz="0 ${-axis_length/2} ${-base_link_height/2 + wheel_z_offset}" rotate_visual="0" friction="100.0" type="continuous" mass="${wheel_mass}" ix="0" iy="0" iz="0" />
  <xacro:volksbot_wheel name="right_rear" xyz="${-2 *wheel_x_offset} ${-axis_length/2} ${-base_link_height/2 + wheel_z_offset}" rotate_visual="0" friction="0.0" type="fixed" mass="${back_wheel_mass}" ix="${0.5 * base_link_length}" iy="${axis_length/2}" iz="${base_link_height/2 - wheel_z_offset}"/>


  <link name="base_top" />

  <joint name="base_top_joint" type="fixed">
    <origin xyz="0 0 ${base_link_height / 2.0}" rpy="0 0 0" />
    <parent link="base_link_dummy" />
    <child link="base_top"/>
  </joint>

  <gazebo>
    <plugin name="diffdrive" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>100</updateRate>
      <leftJoint>left_front_wheel_joint</leftJoint>
      <rightJoint>right_front_wheel_joint</rightJoint>
      <wheelSeparation>${axis_length}</wheelSeparation> 
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <torque>4.0</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
    </plugin>
  </gazebo>
  
   
  
  

</robot>
